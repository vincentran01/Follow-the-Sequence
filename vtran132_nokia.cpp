#include <SPI.h>
#define _LCD PD2
#define _DDR PD3
#define _SCE PD4
#define _RST PB4
#define _DC PD6
#define _DN PB3
#define _CLK PB5

const uint8_t lcd_arrays[][5] PROGMEM = {
  { 0x00, 0x00, 0x00, 0x00, 0x00 }, 
  { 0x00, 0x00, 0x5f, 0x00, 0x00 }, 
  { 0x08, 0x08, 0x08, 0x08, 0x08 }, 
  { 0x00, 0x42, 0x7f, 0x40, 0x00 }, 
  { 0x42, 0x61, 0x51, 0x49, 0x46 }, 
  { 0x21, 0x41, 0x45, 0x4b, 0x31 }, 
  { 0x18, 0x14, 0x12, 0x7f, 0x10 }, 
  { 0x27, 0x45, 0x45, 0x45, 0x39 }, 
  { 0x3c, 0x4a, 0x49, 0x49, 0x30 }, 
  { 0x01, 0x71, 0x09, 0x05, 0x03 }, 
  { 0x36, 0x49, 0x49, 0x49, 0x36 }, 
  { 0x06, 0x49, 0x49, 0x29, 0x1e }, 
  { 0x7e, 0x11, 0x11, 0x11, 0x7e }, 
  { 0x7f, 0x49, 0x49, 0x49, 0x36 }, 
  { 0x3e, 0x41, 0x41, 0x41, 0x22 }, 
  { 0x7f, 0x41, 0x41, 0x22, 0x1c }, 
  { 0x7f, 0x49, 0x49, 0x49, 0x41 }, 
  { 0x7f, 0x09, 0x09, 0x09, 0x01 }, 
  { 0x3e, 0x41, 0x49, 0x49, 0x7a }, 
  { 0x7f, 0x08, 0x08, 0x08, 0x7f }, 
  { 0x00, 0x41, 0x7f, 0x41, 0x00 }, 
  { 0x20, 0x40, 0x41, 0x3f, 0x01 }, 
  { 0x7f, 0x08, 0x14, 0x22, 0x41 }, 
  { 0x7f, 0x40, 0x40, 0x40, 0x40 }, 
  { 0x7f, 0x02, 0x0c, 0x02, 0x7f }, 
  { 0x7f, 0x04, 0x08, 0x10, 0x7f }, 
  { 0x3e, 0x41, 0x41, 0x41, 0x3e }, 
  { 0x7f, 0x09, 0x09, 0x09, 0x06 }, 
  { 0x3e, 0x41, 0x51, 0x21, 0x5e }, 
  { 0x7f, 0x09, 0x19, 0x29, 0x46 }, 
  { 0x46, 0x49, 0x49, 0x49, 0x31 }, 
  { 0x01, 0x01, 0x7f, 0x01, 0x01 }, 
  { 0x3f, 0x40, 0x40, 0x40, 0x3f },
  { 0x1f, 0x20, 0x40, 0x20, 0x1f },
  { 0x3f, 0x40, 0x38, 0x40, 0x3f },
  { 0x63, 0x14, 0x08, 0x14, 0x63 },
  { 0x07, 0x08, 0x70, 0x08, 0x07 },
  { 0x61, 0x51, 0x49, 0x45, 0x43 },
  { 0x7f, 0x48, 0x44, 0x44, 0x38 },
  { 0x38, 0x44, 0x44, 0x44, 0x20 },
  { 0x38, 0x44, 0x44, 0x48, 0x7f },
  { 0x38, 0x54, 0x54, 0x54, 0x18 },
  { 0x08, 0x7e, 0x09, 0x01, 0x02 },
  { 0x0c, 0x52, 0x52, 0x52, 0x3e },
  { 0x7f, 0x08, 0x04, 0x04, 0x78 },
  { 0x00, 0x44, 0x7d, 0x40, 0x00 },
  { 0x20, 0x40, 0x44, 0x3d, 0x00 },
  { 0x7f, 0x10, 0x28, 0x44, 0x00 },
  { 0x00, 0x41, 0x7f, 0x40, 0x00 },
  { 0x7c, 0x04, 0x18, 0x04, 0x78 },
  { 0x7c, 0x08, 0x04, 0x04, 0x78 },
  { 0x38, 0x44, 0x44, 0x44, 0x38 },
  { 0x7c, 0x14, 0x14, 0x14, 0x08 },
  { 0x08, 0x14, 0x14, 0x18, 0x7c },
  { 0x7c, 0x08, 0x04, 0x04, 0x08 },
  { 0x48, 0x54, 0x54, 0x54, 0x20 },
  { 0x04, 0x3f, 0x44, 0x40, 0x20 },
  { 0x3c, 0x40, 0x40, 0x20, 0x7c },
  { 0x1c, 0x20, 0x40, 0x20, 0x1c },
  { 0x3c, 0x40, 0x30, 0x40, 0x3c },
  { 0x44, 0x28, 0x10, 0x28, 0x44 },
  { 0x0c, 0x50, 0x50, 0x50, 0x3c },
  { 0x44, 0x64, 0x54, 0x4c, 0x44 },
};
struct N{
  uint8_t urf[504];
  uint8_t tx;
  uint8_t ty;

  uint8_t _tx = 0;
  uint8_t _ty = 0;
};

void beginDaNokia() {
  _DDR |= (1 << _RST);
  _DDR |= (1 << _SCE);
  _DDR |= (1 << _DC);
  _DDR |= (1 << _DN);
  _DDR |= (1 << _SCLK);

  _LCD |= (1 << _RST);
  _LCD |= (1 << LCD_SCE);

  rt2(0x16);
  rt2(0x03);
  rt2(0xC2);
  rt2(0x20);
  rt2(0x80);
  rt2(0x08);
  rt2(0x0C);
}

void printMe(char a, uint8_t big) {
  uint8_t b;
  uint8_t y;

  for (b = 0; b < 5*big; ++b) {
    for (y = 0; y < 7*big; ++y) {
      if ((lcd_arrays[a - 18][b/big]) & (1 << y/scale)) {
        f(N.tx + b, N.ty + y, 1)
      }
    }
  }
}

void printMe2(uint8_t value) {
  rt(value, 1);
}

void f(uint8_t a, uint8_t b, uint8_t z) {
  uint8_t value = N.urf[(b*84) / (x+8)]
  if (z) {
    value |= (1 << (y % 8));
  }
  else {
    value &= ~(1 << (y & 8));
  }
}

void whereAmI(uint8_t column, uint8_t row) {
  _tx = x;
  _ty = y;
}

void rt (uint8_t bite, uint8_t value) {
  _LCD &= ~(1 << _SCE);
  if (value) {
    _LCD |= (1 << _DC);
  }
  else {
    _LCD |= (0 << _DC);
  }

  for (int i = 0; i <= 7; ++i) {
    if ((bite >> (7-i)) & 0x01) {
        _LCD |= (1 << _DN);
    }
    else {
      _LCD &= ~(1 << _DN);
    }
    _LCD |= (1 << _CLK);
    _LCD &= ~(1 << _CLK);
  }
}
 
void rt2 (uint8_t value) {
  rt(value, 1);
}
